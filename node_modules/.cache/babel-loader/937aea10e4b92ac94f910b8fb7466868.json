{"ast":null,"code":"var _jsxFileName = \"/Users/alexchalakov/Desktop/Task Manager/task-manager/Task-Manager/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //showing different interface by default\n  const [showAddTask, setShowAddTask] = useState(false); //initialising various tasks\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Dentist',\n    day: 'Sep 5th at 2:30 pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Groceries Shopping',\n    day: 'Sep 6th at 1:30 pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Start of University',\n    day: 'Oct 1st at 2:30 pm',\n    reminder: true\n  }]); //add task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; //delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 32\n      }, this) : 'No tasks to show!', /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"d2zYIUD73LmNLoNC+2D8Wc9A+9k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexchalakov/Desktop/Task Manager/task-manager/Task-Manager/src/App.js"],"names":["useState","BrowserRouter","Router","Route","Header","Tasks","AddTask","Footer","About","App","showAddTask","setShowAddTask","tasks","setTasks","id","text","day","reminder","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","length"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n  //showing different interface by default\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  //initialising various tasks\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Dentist',\n        day: 'Sep 5th at 2:30 pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Groceries Shopping',\n        day: 'Sep 6th at 1:30 pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Start of University',\n        day: 'Oct 1st at 2:30 pm',\n        reminder: true,\n    }\n  ])\n\n  //add task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = {id, ...task}\n    setTasks([...tasks, newTask])\n  }\n\n  //delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n  return ( \n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n          {showAddTask && <AddTask onAdd={addTask}/>}\n          {tasks.length > 0 ? (<Tasks tasks = { tasks } \n          onDelete = {deleteTask} \n          onToggle = {toggleReminder}/>) : ('No tasks to show!')}\n          <Route path = '/about' component={About}/>\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}