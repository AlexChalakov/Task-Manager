{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04b8d715.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\nreturn (\n        <button \n            onClick = {onClick}\n            style ={{ backgroundColor : color}} \n            className = 'btn'>\n            {text}\n        </button>\n    )\n}\n\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    return (\n        <header className = 'header'>\n            <h1>{title}</h1>\n            <Button color= {showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick = {onAdd} />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Manager',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n// const headingStyle = {\n//     color: 'red', \n//     backgroundColor: 'black'\n// }\n\nexport default Header","import { FaTimesCircle } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className = {`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick ={() => onToggle(task.id)}>\n            <h3> \n            {task.text} <FaTimesCircle style={{ color: 'red', cursor: 'pointer' }} onClick = {() => onDelete(task.id)}/> \n            </h3>\n            <p> {task.day} </p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    \n    return (\n        <>\n            {tasks.map((task) => (\n            <Task key={task.id} \n                task = {task} \n                onDelete = {onDelete} \n                onToggle = {onToggle}/>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text) {\n            alert('Please add a task.')\n            return\n        }\n\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className = 'add-form' onSubmit = {onSubmit} >\n            <div className = 'form-control'>\n                <label>Task</label>\n                <input type = 'text' placeholder = 'Add Task' value = {text} onChange = {(e) => setText(e.target.value)}/>\n            </div>\n            <div className = 'form-control'>\n                <label>Day and Time</label>\n                <input type = 'text' placeholder = 'Add Day and Time' value = {day} onChange = {(e) => setDay(e.target.value)}/>\n            </div>\n            <div className = 'form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type = 'checkbox' checked = {reminder} value = {reminder} onChange = {(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n\n            <input type = 'submit' value = 'Save Task' className = 'btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  //showing different interface by default\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  //initialising various tasks\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30 pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30 pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30 pm',\n        reminder: false,\n    }\n  ])\n\n  //add task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = {id, ...task}\n    setTasks([...tasks, newTask])\n  }\n\n  //delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n  return ( \n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (<Tasks tasks = { tasks } \n        onDelete = {deleteTask} \n        onToggle = {toggleReminder}/>) : ('No tasks to show!')}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}